kind: List
metadata: {}
apiVersion: v1
items:
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    name: cloud-sched-viz
    namespace: default
- apiVersion: rbac.authorization.k8s.io/v1
  kind: Role
  metadata:
    name: cloud-sched-viz
    namespace: default
  rules:
  - apiGroups:
    - apps
    resources:
    - deployments
    verbs:
    - '*'
- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    name: cloud-sched-viz
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: Role
    name: cloud-sched-viz
  subjects:
  - kind: ServiceAccount
    name: cloud-sched-viz
    namespace: default
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: cloud-sched-viz
    labels:
      app: cloud-sched-viz
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: cloud-sched-viz
    template:
      metadata:
        labels:
          app: cloud-sched-viz
      spec:
        serviceAccountName: cloud-sched-viz
        containers:
        - name: www
          image: karlkfi/cloud-sched-viz:latest
          imagePullPolicy: Always
          command:
          - "bin/www"
          - "--api-type=kubernetes"
          - "--api-host=kubernetes.default.svc.cluster.local"
          - "--api-port=443"
          - "--api-token-file=/var/run/secrets/kubernetes.io/serviceaccount/token"
          ports:
          - name: http
            containerPort: 8080
          resources:
            limits:
              cpu: 1
              memory: "64M"
          env:
          - name: NODE_ENV
            value: development
- apiVersion: v1
  kind: Service
  metadata:
    name: cloud-sched-viz
    labels:
      app: cloud-sched-viz
  spec:
    selector:
      app: cloud-sched-viz
    ports:
    - port: 80
      targetPort: http
